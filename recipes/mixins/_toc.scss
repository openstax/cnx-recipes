@mixin toc_navTOCUnwrap() {
  nav#toc {
    li {
      > a {
        > h1 > span,
        > h2 > span,
        > h3 > span,
        > div > span {
          move-to: title-spans;
        }
        &:deferred {
          content: pending(title-spans);
        }
      }
    }
  }
}

@mixin toc_putTOCElements($Config_TocTitleWord) {
  nav#toc {
    content: '';
    @if release-flag-enabled(toc-title-word) {
      &::after {
        content: $Config_TocTitleWord;
        container: h1;
        class: os-toc-title;
      }
    }
    &::after {
      content: pending(eob-toc);
      container: ol;
    }
  }
}

@mixin _pageEntry($pageClass) {
  content: pending(page-link);
  move-to: eob-toc;
  attr-cnx-archive-uri: attr(id);
  attr-cnx-archive-shortid: string(page-shortid);
  container: li;
  @if $pageClass {
    class: os-toc-#{$pageClass};
  }
}

@mixin _countedPage {
  @include _pageEntry("counted-page");
}

@mixin _uncountedPage {
  @include _pageEntry(null);
}

@mixin compositeChapterTOC($hasCompositeChapter) {
  @if release-flag-enabled(toc-eoc-composite-chapter){
    @if $hasCompositeChapter {
      > [data-type="chapter"] {
        > [data-type="composite-chapter"] {
          > [data-type='document-title'] {
            node-set: CchapterTitle;
            string-set: CchapTitle-id attr(id);
          }
          > [data-type='metadata']
          > [data-type='cnx-archive-shortid'] {
            string-set: Cchap-shortid attr(data-value);
          }
          &::after {
            content: nodes(CchapterTitle);
            attr-href: "#" string(CchapTitle-id);
            container: a;
            move-to: cc-link;
          }
          > div[data-type="composite-page"] {
            string-set: Cpage-id-chap attr(id);
            > [data-type='title'] {
              node-set: CPageTitle;
            }
            > [data-type='metadata']
            > [data-type='cnx-archive-shortid'] {
              string-set: Cpage-shortid attr(data-value);
            }
            &::after {
              content: nodes(CPageTitle);
              attr-href: "#" string(Cpage-id-chap);
              container: a;
              move-to: CpageLink;
            }
            &::after {
              content: pending(CpageLink);
              attr-cnx-archive-uri: attr(id);
              attr-cnx-archive-shortid: string(Cpage-shortid);
              container: li;
              class: "os-toc-chapter-composite-page";
              move-to: Cpage-list;
            }
          }
          &::after {
            content: pending(Cpage-list);
            container: ol;
            class: "os-chapter";
            move-to: cc-li;
          }
          &::after {
            content: pending(cc-link) pending(cc-li);
            attr-cnx-archive-uri: attr(id);
            attr-cnx-archive-shortid: string(Cchap-shortid);
            container: li;
            class: "os-toc-composite-chapter";
            move-to: eoc-toc-pages;
          }
        }
      }
    }
  } @else if not release-flag-enabled(toc-eoc-composite-chapter) {
      @if $hasCompositeChapter {
        > [data-type="composite-chapter"] {
          > [data-type='document-title'] {
            node-set: CchapterTitle;
            string-set: CchapTitle-id attr(id);
            //copy-to: eoc-toc;
          }
          > [data-type='metadata']
          > [data-type='cnx-archive-shortid'] {
            string-set: Cchap-shortid attr(data-value);
          }
          &::after {
            content: nodes(CchapterTitle);
            attr-href: "#" string(CchapTitle-id);
            container: a;
            move-to: cc-link;
          }
          > div[data-type="composite-page"] {
            string-set: Cpage-id-chap attr(id);
            > [data-type='title'] {
              node-set: CPageTitle;
            }
            > [data-type='metadata']
            > [data-type='cnx-archive-shortid'] {
              string-set: Cpage-shortid attr(data-value);
            }
            &::after {
              content: nodes(CPageTitle);
              attr-href: "#" string(Cpage-shortid);
              container: a;
              move-to: CpageLink;
            }
            &::after {
              content: pending(CpageLink);
              attr-cnx-archive-uri: attr(id);
              attr-cnx-archive-shortid: string(page-shortid);
              container: li;
              move-to: Cpage-list;
            }
          }
          &::after {
            content: pending(Cpage-list);
            attr-cnx-archive-uri: attr(id);
            attr-cnx-archive-shortid: string(page-shortid);
            container: ol;
            move-to: cc-li;
          }
          &::after {
            content: pending(cc-link) pending(cc-li);
            container: li;
            move-to: eoc-toc-pages;
        }
      }
    }
  }
}

@mixin toc_prepTOCElements($hasCompositeChapter) {
  $chapterAndCompositeChapterSel: ('> div[data-type="chapter"]');
  @if $hasCompositeChapter {
    $chapterAndCompositeChapterSel: append($chapterAndCompositeChapterSel, '> div[data-type="composite-chapter"]', comma);
  }

  body {
    > div[data-type="page"],
    > div[data-type="composite-page"] {
      string-set: page-id attr(id);

      > [data-type='document-title'] {
        node-set: pageTitle;
      }

      > [data-type='metadata']
      > [data-type='cnx-archive-shortid'] {
        string-set: page-shortid attr(data-value);
      }
      &::after {
        content: nodes(pageTitle);
        attr-href: "#" string(page-id);
        container: a;
        move-to: page-link;
      }
      @if release-flag-enabled(toc-labeled-pages) {
        &.appendix::after {
          @include _pageEntry("appendix")
        }
        &.os-references-container::after {
          @include _pageEntry("references")
        }
        &.os-index-container::after {
          @include _pageEntry("index")
        }
        &.os-index-name-container::after {
          @include _pageEntry("index")
        }
        &.os-index-term-container::after {
          @include _pageEntry("index")
        }
        &.os-index-foreign-container::after {
          @include _pageEntry("index")
        }
        &.preface::after {
          @include _pageEntry("preface")
        }
        &.handbook::after {
          @include _pageEntry("handbook")
        }
        &:not(.preface):not(.appendix):not(.os-index-container):not(.os-index-name-container):not(.os-index-term-container):not(.os-index-foreign-container):not(.os-references-container):not(.handbook)::after {
          @include _pageEntry(null)
        }
      } @else if release-flag-enabled(toc-numbered-pages) {
        &:not(.appendix)::after {
          @include _uncountedPage();
        }
        &.appendix::after {
          @include _countedPage();
        }
      } @else {
        &::after {
          @include _uncountedPage();
        }
      }
    }
    @if release-flag-enabled(toc-eoc-composite-chapter){
      @include compositeChapterTOC($hasCompositeChapter);
    }
    #{$chapterAndCompositeChapterSel} {
      @if not release-flag-enabled(toc-eoc-composite-chapter) {
        @include compositeChapterTOC($hasCompositeChapter);
      }
      > [data-type='document-title'] {
        node-set: chapterTitle;
        string-set: chapTitle-id attr(id);
      }
      > [data-type='metadata']
      > [data-type='cnx-archive-shortid'] {
        string-set: chap-shortid attr(data-value);
      }
      &::after {
        content: nodes(chapterTitle);
        attr-href: "#" string(chapTitle-id);
        container: a;
        move-to: eoc-toc;
      }
      > div[data-type="page"],
      > div[data-type="composite-page"] {
        string-set: page-id-chap attr(id);
        > [data-type='document-title'] {
          node-set: PageTitle;
        }
        > [data-type='metadata']
        > [data-type='cnx-archive-shortid'] {
          string-set: page-shortid attr(data-value);
        }
        &::after {
          content: nodes(PageTitle);
          attr-href: "#" string(page-id-chap);
          container: a;
          move-to: page-link;
        }
        @if not release-flag-enabled(toc-labeled-pages) {
          &::after {
            content: pending(page-link);
            move-to: eoc-toc-pages;
            attr-cnx-archive-uri: attr(id);
            attr-cnx-archive-shortid: string(page-shortid);
            container: li;
          }
        }
      }
      @if release-flag-enabled(toc-labeled-pages) {
        > div[data-type="page"] {
          &::after {
            content: pending(page-link);
            move-to: eoc-toc-pages;
            attr-cnx-archive-uri: attr(id);
            attr-cnx-archive-shortid: string(page-shortid);
            container: li;
            class: os-toc-chapter-page;
          }
        }
        > div[data-type="composite-page"] {
          &::after {
            content: pending(page-link);
            move-to: eoc-toc-pages;
            attr-cnx-archive-uri: attr(id);
            attr-cnx-archive-shortid: string(page-shortid);
            container: li;
            class: os-toc-chapter-composite-page;
          }
        }
      }
      &::after {
        content: pending(eoc-toc-pages);
        container: ol;
        class: os-chapter;
        move-to: eoc-toc;
      }
      @if not release-flag-enabled(toc-labeled-pages) {
        &::after {
          content: pending(eoc-toc);
          attr-cnx-archive-uri: attr(id);
          attr-cnx-archive-shortid: string(chap-shortid);
          container: li;
          move-to: eob-toc;
        }
      }
    }
    @if release-flag-enabled(toc-labeled-pages) {
      > div[data-type="chapter"]#{if($hasCompositeChapter, ':not([data-type="composite-chapter"])','')}::after {
        content: pending(eoc-toc);
        attr-cnx-archive-uri: attr(id);
        attr-cnx-archive-shortid: string(chap-shortid);
        container: li;
        move-to: eob-toc;
        class: "os-toc-chapter";
      }
      @if $hasCompositeChapter {
        > div[data-type="composite-chapter"]::after {
          content: pending(eoc-toc);
          attr-cnx-archive-uri: attr(id);
          attr-cnx-archive-shortid: string(chap-shortid);
          container: li;
          move-to: eob-toc;
          class: "os-toc-composite-chapter";
        }
      }
    }
    > div[data-type="unit"] {
      > [data-type='document-title'] {
        node-set: unitTitle;
        string-set: uTitle-id attr(id);
      }

      > [data-type='metadata']
      > [data-type='cnx-archive-shortid'] {
        string-set: unit-shortid attr(data-value);
      }
      @if release-flag-enabled(add-unit-pages) {
        > div[data-type="page"] {
          string-set: page-id-unit attr(id);
          > [data-type='document-title'] {
            node-set: UnitPageTitle;
          }
          > [data-type='metadata']
          > [data-type='cnx-archive-shortid'] {
            string-set: page-shortid-unit attr(data-value);
          }
          &::after {
            content: nodes(UnitPageTitle);
            attr-href: "#" string(page-id-unit);
            container: a;
            move-to: unit-page-link;
          }
          &::after {
            content: pending(unit-page-link);
            move-to: eou-toc-pages;
            attr-cnx-archive-uri: attr(id);
            attr-cnx-archive-shortid: string(page-shortid-unit);
            container: li;
            class: os-toc-unit-page;
          }
        }
      }
      &::after {
        content: nodes(unitTitle);
        attr-href: "#" string(uTitle-id);
        container: a;
        move-to: eou-toc;
      }
      @if release-flag-enabled(toc-eoc-composite-chapter) {
        @include compositeChapterTOC($hasCompositeChapter);
      }
      #{$chapterAndCompositeChapterSel} { @if not release-flag-enabled(toc-eoc-composite-chapter) {
        @include compositeChapterTOC($hasCompositeChapter);
      }
        > [data-type='document-title'] {
          node-set: chapterTitle;
          string-set: chapTitle-id attr(id);
          //copy-to: eoc-toc;
        }
        > [data-type='metadata']
        > [data-type='cnx-archive-shortid'] {
          string-set: chap-shortid attr(data-value);
        }
        &::after {
          content: nodes(chapterTitle);
          attr-href: "#" string(chapTitle-id);
          container: a;
          move-to: eoc-toc;
        }
        > div[data-type="page"],
        > div[data-type="composite-page"] {
          string-set: page-id-chap attr(id);
          > [data-type='document-title'] {
            node-set: PageTitle;
          }
          > [data-type='metadata']
          > [data-type='cnx-archive-shortid'] {
            string-set: page-shortid attr(data-value);
          }
          &::after {
            content: nodes(PageTitle);
            attr-href: "#" string(page-id-chap);
            container: a;
            move-to: page-link;
          }
          @if not release-flag-enabled(toc-labeled-pages) {
            &::after {
              content: pending(page-link);
              move-to: eoc-toc-pages;
              attr-cnx-archive-uri: attr(id);
              attr-cnx-archive-shortid: string(page-shortid);
              container: li;
            }
          }
        }
        @if release-flag-enabled(toc-labeled-pages) {
          > div[data-type="page"] {
            &::after {
              content: pending(page-link);
              move-to: eoc-toc-pages;
              attr-cnx-archive-uri: attr(id);
              attr-cnx-archive-shortid: string(page-shortid);
              container: li;
              class: os-toc-chapter-page;
            }
          }
          > div[data-type="composite-page"] {
            &::after {
              content: pending(page-link);
              move-to: eoc-toc-pages;
              attr-cnx-archive-uri: attr(id);
              attr-cnx-archive-shortid: string(page-shortid);
              container: li;
              class: os-toc-chapter-composite-page;
            }
          }
        }
        &::after {
          content: pending(eoc-toc-pages);
          container: ol;
          class: os-chapter;
          move-to: eoc-toc;
        }
        @if not release-flag-enabled(toc-labeled-pages) {
          &::after {
            content: pending(eoc-toc);
            attr-cnx-archive-uri: attr(id);
            attr-cnx-archive-shortid: string(chap-shortid);
            container: li;
            move-to: eou-toc-chapters;
          }
        }
      }
      @if release-flag-enabled(toc-labeled-pages) {
        > div[data-type="chapter"]#{if($hasCompositeChapter, ':not([data-type="composite-chapter"])','')}::after {
          content: pending(eoc-toc);
          attr-cnx-archive-uri: attr(id);
          attr-cnx-archive-shortid: string(chap-shortid);
          container: li;
          move-to: eou-toc-chapters;
          class: "os-toc-chapter";
        }
        @if $hasCompositeChapter {
          > div[data-type="composite-chapter"]::after {
            content: pending(eoc-toc);
            attr-cnx-archive-uri: attr(id);
            attr-cnx-archive-shortid: string(chap-shortid);
            container: li;
            move-to: eou-toc-chapters;
            class: "os-toc-composite-chapter";
          }
        }
      }
      &::after {
        @if release-flag-enabled(add-unit-pages) {
          content: pending(eou-toc-pages) pending(eou-toc-chapters);
        } @else {
          content: pending(eou-toc-chapters);
        }
        container: ol;
        class: os-unit;
        move-to: eou-toc;
      }
      &::after {
        content: pending(eou-toc);
        attr-cnx-archive-uri: attr(id);
        attr-cnx-archive-shortid: string(unit-shortid);
        container: li;
        @if release-flag-enabled(toc-labeled-pages) {
          class: os-toc-unit;
        }
        move-to: eob-toc;
      }
    }
  }
}
